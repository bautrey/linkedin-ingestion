<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - LinkedIn Ingestion Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
    <link href="/css/app.css" rel="stylesheet">
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="sidebar-wrapper px-0">
                <%- include('../partials/sidebar') %>
            </div>
            
            <!-- Main Content -->
            <div class="main-content">
                <%- include('../partials/header', { pageTitle: title }) %>
                
                <div class="container-fluid py-4">
                    <!-- Page Header -->
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <h2 class="fw-bold mb-1"><%= title %></h2>
                            <p class="text-muted mb-0">
                                <% if (isBulk) { %>
                                    Select a template and start scoring <%= profiles.length %> profiles
                                <% } else { %>
                                    Select a template and start scoring this profile
                                <% } %>
                            </p>
                        </div>
                        <div>
                            <a href="/profiles" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left"></i> Back to Profiles
                            </a>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Profile(s) Summary -->
                        <div class="col-md-6">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-white">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-people me-2"></i>
                                        Profile<%= profiles.length > 1 ? 's' : '' %> to Score
                                    </h5>
                                </div>
                                <div class="card-body p-0">
                                    <div class="list-group list-group-flush">
                                        <% profiles.slice(0, 10).forEach(profile => { %>
                                            <div class="list-group-item">
                                                <div class="d-flex align-items-center">
                                                    <% if (profile.profile_image_url) { %>
                                                        <img src="<%= profile.profile_image_url %>" 
                                                             alt="<%= profile.name || 'Profile' %> photo" 
                                                             class="profile-img me-3 rounded-circle" 
                                                             style="width: 40px; height: 40px; object-fit: cover;"
                                                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                                        <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-3" 
                                                             style="width: 40px; height: 40px; display: none;">
                                                            <i class="bi bi-person text-white"></i>
                                                        </div>
                                                    <% } else { %>
                                                        <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-3" 
                                                             style="width: 40px; height: 40px;">
                                                            <i class="bi bi-person text-white"></i>
                                                        </div>
                                                    <% } %>
                                                    <div>
                                                        <div class="fw-medium">
                                                            <%= profile.full_name || profile.name || 'Unknown Name' %>
                                                        </div>
                                                        <% if (profile.position || profile.current_company?.name) { %>
                                                            <small class="text-muted">
                                                                <%= profile.position || '' %>
                                                                <% if (profile.position && profile.current_company?.name) { %> at <% } %>
                                                                <%= profile.current_company?.name || '' %>
                                                            </small>
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }); %>
                                        <% if (profiles.length > 10) { %>
                                            <div class="list-group-item text-center">
                                                <small class="text-muted">
                                                    ... and <%= profiles.length - 10 %> more profile<%= profiles.length - 10 > 1 ? 's' : '' %>
                                                </small>
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Scoring Configuration -->
                        <div class="col-md-6">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-white">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-star me-2"></i>
                                        Scoring Configuration
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <form id="scoringForm">
                                        <% profiles.forEach(profile => { %>
                                            <input type="hidden" name="profile_ids[]" value="<%= profile.id %>">
                                        <% }); %>
                                        
                                        <div class="mb-4">
                                            <label class="form-label fw-medium">Select Scoring Template</label>
                                            <% if (templates && templates.length > 0) { %>
                                                <div class="row g-2">
                                                    <% templates.forEach(template => { %>
                                                        <div class="col-12">
                                                            <div class="form-check">
                                                                <input class="form-check-input" type="radio" 
                                                                       name="template_id" id="template_<%= template.id %>" 
                                                                       value="<%= template.id %>">
                                                                <label class="form-check-label w-100" for="template_<%= template.id %>">
                                                                    <div class="card border-secondary">
                                                                        <div class="card-body p-3">
                                                                            <div class="d-flex justify-content-between align-items-start">
                                                                                <div>
                                                                                    <h6 class="card-title mb-1"><%= template.name %></h6>
                                                                                    <p class="card-text text-muted small mb-0">
                                                                                        <%= template.description || 'No description available' %>
                                                                                    </p>
                                                                                </div>
                                                                                <span class="badge bg-primary"><%= template.category || 'General' %></span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </label>
                                                            </div>
                                                        </div>
                                                    <% }); %>
                                                </div>
                                            <% } else { %>
                                                <div class="alert alert-warning" role="alert">
                                                    <i class="bi bi-exclamation-triangle me-2"></i>
                                                    No scoring templates available. 
                                                    <a href="/templates" class="alert-link">Create one first</a>.
                                                </div>
                                            <% } %>
                                        </div>

                                        <div class="mb-4">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="template_id" 
                                                       id="customPrompt" value="">
                                                <label class="form-check-label" for="customPrompt">
                                                    <strong>Use Custom Prompt</strong>
                                                    <br><small class="text-muted">Write your own scoring instructions</small>
                                                </label>
                                            </div>
                                            <div class="mt-3" id="customPromptSection" style="display: none;">
                                                <label class="form-label fw-medium mb-2">Custom Scoring Prompt</label>
                                                <textarea class="form-control" name="custom_prompt" rows="4" 
                                                          placeholder="Example: Evaluate this profile for senior engineering leadership potential. Rate on a scale of 1-10 considering technical expertise, management experience, and cultural fit. Provide detailed reasoning for each area."></textarea>
                                                <small class="form-text text-muted mt-1">
                                                    <i class="bi bi-info-circle"></i>
                                                    Provide specific instructions for how the AI should evaluate and score the profile(s). Be clear and detailed for best results.
                                                </small>
                                                <div class="mt-2">
                                                    <small class="text-success" id="customPromptValidation" style="display: none;">
                                                        <i class="bi bi-check-circle"></i> Custom prompt is ready
                                                    </small>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="d-grid gap-2">
                                            <button type="submit" class="btn btn-primary btn-lg" id="startScoring" disabled>
                                                <i class="bi bi-play-circle me-2"></i>
                                                Start Scoring <%= profiles.length > 1 ? profiles.length + ' Profiles' : 'Profile' %>
                                            </button>
                                            <a href="/profiles" class="btn btn-outline-secondary">
                                                <i class="bi bi-x-circle me-2"></i>Cancel
                                            </a>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Loading Modal -->
    <div class="modal fade" id="loadingModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body text-center py-4">
                    <div class="spinner-border text-primary mb-3" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <h5>Starting Scoring Process</h5>
                    <p class="text-muted mb-0">This may take a few moments...</p>
                    <div class="mt-3">
                        <div class="progress" style="height: 6px;">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                 role="progressbar" style="width: 0%" id="progressBar"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/app.js?v=<%= Date.now() %>"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('scoringForm');
            const templateRadios = document.querySelectorAll('input[name="template_id"]');
            const customPromptSection = document.getElementById('customPromptSection');
            const startButton = document.getElementById('startScoring');
            const loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));
            
            // Handle template selection
            templateRadios.forEach(radio => {
                radio.addEventListener('change', function() {
                    const isCustom = this.value === '';
                    console.log('Template radio changed:', this.value, 'isCustom:', isCustom);
                    customPromptSection.style.display = isCustom ? 'block' : 'none';
                    updateStartButton();
                });
            });
            
            // Handle custom prompt changes
            const customPromptTextarea = document.querySelector('textarea[name="custom_prompt"]');
            const customPromptValidation = document.getElementById('customPromptValidation');
            
            customPromptTextarea.addEventListener('input', function() {
                const promptLength = this.value.trim().length;
                if (promptLength >= 10) {
                    customPromptValidation.style.display = 'block';
                    customPromptValidation.className = 'text-success';
                    customPromptValidation.innerHTML = '<i class="bi bi-check-circle"></i> Custom prompt is ready (' + promptLength + ' characters)';
                } else if (promptLength > 0) {
                    customPromptValidation.style.display = 'block';
                    customPromptValidation.className = 'text-warning';
                    customPromptValidation.innerHTML = '<i class="bi bi-exclamation-triangle"></i> Prompt should be more detailed (' + promptLength + ' characters)';
                } else {
                    customPromptValidation.style.display = 'none';
                }
                updateStartButton();
            });
            
            function updateStartButton() {
                const selectedTemplate = document.querySelector('input[name="template_id"]:checked');
                let isValid = false;
                
                if (selectedTemplate) {
                    if (selectedTemplate.value !== '') {
                        // Template selected
                        isValid = true;
                    } else {
                        // Custom prompt selected, check if prompt is filled
                        const customPrompt = document.querySelector('textarea[name="custom_prompt"]').value.trim();
                        isValid = customPrompt.length > 0;
                    }
                }
                
                startButton.disabled = !isValid;
            }
            
            // Handle form submission
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(form);
                const selectedTemplate = document.querySelector('input[name="template_id"]:checked');
                const profileIds = Array.from(formData.getAll('profile_ids[]'));
                
                if (!selectedTemplate) {
                    showNotification('Please select a template or provide a custom prompt', 'warning');
                    return;
                }
                
                // Show loading modal
                loadingModal.show();
                let progress = 0;
                const progressBar = document.getElementById('progressBar');
                
                // Simulate progress
                const progressInterval = setInterval(() => {
                    progress += Math.random() * 30;
                    if (progress > 90) progress = 90;
                    progressBar.style.width = progress + '%';
                }, 500);
                
                try {
                    // Submit scoring requests
                    const requests = profileIds.map(profileId => {
                        const requestData = {};
                        
                        if (selectedTemplate.value === '') {
                            // Custom prompt
                            requestData.prompt = formData.get('custom_prompt');
                        } else {
                            // Template
                            requestData.template_id = selectedTemplate.value;
                        }
                        
                        return fetch(`/api/profiles/${profileId}/score`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(requestData)
                        });
                    });
                    
                    const responses = await Promise.all(requests);
                    const results = await Promise.all(responses.map(r => r.json()));
                    
                    clearInterval(progressInterval);
                    progressBar.style.width = '100%';
                    
                    setTimeout(() => {
                        loadingModal.hide();
                        
                        const successCount = results.filter(r => r.success).length;
                        const failureCount = results.length - successCount;
                        
                        if (successCount > 0) {
                            showNotification(`Successfully started scoring for ${successCount} profile${successCount > 1 ? 's' : ''}`, 'success');
                        }
                        
                        if (failureCount > 0) {
                            showNotification(`Failed to start scoring for ${failureCount} profile${failureCount > 1 ? 's' : ''}`, 'warning');
                        }
                        
                        // Redirect to scoring dashboard
                        setTimeout(() => {
                            window.location.href = '/scoring';
                        }, 2000);
                        
                    }, 500);
                    
                } catch (error) {
                    clearInterval(progressInterval);
                    loadingModal.hide();
                    console.error('Error starting scoring:', error);
                    showNotification('An error occurred while starting the scoring process', 'danger');
                }
            });
        });
    </script>
</body>
</html>
