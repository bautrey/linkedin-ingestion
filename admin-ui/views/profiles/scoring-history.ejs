<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - LinkedIn Ingestion Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
    <link href="/css/app.css" rel="stylesheet">
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="sidebar-wrapper px-0">
                <%- include('../partials/sidebar') %>
            </div>
            
            <!-- Main Content -->
            <div class="main-content">
                <%- include('../partials/header', { pageTitle: title }) %>
                
                <div class="container-fluid py-4">
                    <!-- Page Header -->
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div class="d-flex align-items-center">
                            <a href="/profiles/<%= profile.id %>" class="btn btn-outline-secondary me-3">
                                <i class="bi bi-arrow-left"></i> Back to Profile
                            </a>
                            <div>
                                <h2 class="fw-bold mb-1">Scoring History</h2>
                                <p class="text-muted mb-0">
                                    <i class="bi bi-person"></i> <%= profile.name || 'Unknown Name' %>
                                </p>
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-outline-primary" onclick="scoreProfile('<%= profile.id %>')">
                                <i class="bi bi-award"></i> New Score
                            </button>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Scoring History -->
                        <div class="col-12">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-white border-0">
                                    <h5 class="mb-0 fw-bold">
                                        <i class="bi bi-clock-history text-primary"></i> Scoring History
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <% if (history && history.length > 0) { %>
                                        <div class="table-responsive">
                                            <table class="table table-hover">
                                                <thead class="table-light">
                                                    <tr>
                                                        <th>Date</th>
                                                        <th>Template</th>
                                                        <th>Score</th>
                                                        <th>Status</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <% history.forEach(score => { %>
                                                        <tr>
                                                            <td class="text-muted">
                                                                <%= new Date(score.created_at).toLocaleString() %>
                                                            </td>
                                                            <td>
                                                                <span class="fw-medium"><%= score.template_name || 'Unknown Template' %></span>
                                                                <% if (score.template_category) { %>
                                                                    <br><small class="text-muted"><%= score.template_category %></small>
                                                                <% } %>
                                                            </td>
                                                            <td>
                                                                <% if (score.final_score !== null && score.final_score !== undefined) { %>
                                                                    <div class="d-flex align-items-center">
                                                                        <span class="fw-bold me-2"><%= score.final_score.toFixed(1) %></span>
                                                                        <div class="progress flex-grow-1" style="height: 6px;">
                                                                            <div class="progress-bar bg-<%= score.final_score >= 8 ? 'success' : score.final_score >= 6 ? 'warning' : 'danger' %>" 
                                                                                 style="width: <%= (score.final_score * 10) %>%"></div>
                                                                        </div>
                                                                    </div>
                                                                <% } else { %>
                                                                    <span class="text-muted">â€”</span>
                                                                <% } %>
                                                            </td>
                                                            <td>
                                                                <% if (score.status === 'completed') { %>
                                                                    <span class="badge bg-success">
                                                                        <i class="bi bi-check-circle"></i> Completed
                                                                    </span>
                                                                <% } else if (score.status === 'pending') { %>
                                                                    <span class="badge bg-warning">
                                                                        <i class="bi bi-clock"></i> Pending
                                                                    </span>
                                                                <% } else if (score.status === 'failed') { %>
                                                                    <span class="badge bg-danger">
                                                                        <i class="bi bi-x-circle"></i> Failed
                                                                    </span>
                                                                <% } else { %>
                                                                    <span class="badge bg-secondary">
                                                                        <%= score.status || 'Unknown' %>
                                                                    </span>
                                                                <% } %>
                                                            </td>
                                                            <td>
                                                                <div class="btn-group btn-group-sm">
                                                                    <% if (score.job_id) { %>
                                                                        <a href="/scoring/jobs/<%= score.job_id %>" class="btn btn-outline-primary btn-sm">
                                                                            <i class="bi bi-eye"></i> View Details
                                                                        </a>
                                                                    <% } %>
                                                                    <% if (score.status === 'failed') { %>
                                                                        <button class="btn btn-outline-warning btn-sm" onclick="retryScoring('<%= score.job_id %>')">
                                                                            <i class="bi bi-arrow-clockwise"></i> Retry
                                                                        </button>
                                                                    <% } %>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    <% }); %>
                                                </tbody>
                                            </table>
                                        </div>
                                    <% } else { %>
                                        <div class="text-center py-5">
                                            <i class="bi bi-clock-history text-muted" style="font-size: 4rem;"></i>
                                            <h4 class="text-muted mt-3">No Scoring History</h4>
                                            <p class="text-muted mb-4">
                                                This profile hasn't been scored yet. Click "New Score" to get started.
                                            </p>
                                            <button class="btn btn-primary" onclick="scoreProfile('<%= profile.id %>')">
                                                <i class="bi bi-award"></i> Score This Profile
                                            </button>
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Score Profile Modal -->
    <div class="modal fade" id="scoreModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Score Profile</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="scoringForm">
                        <div class="mb-3">
                            <label for="templateSelect" class="form-label">Scoring Template</label>
                            <select class="form-select" id="templateSelect" required>
                                <option value="">Select a template...</option>
                                <!-- Templates will be populated via AJAX -->
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="customPrompt" class="form-label">Custom Prompt (Optional)</label>
                            <textarea class="form-control" id="customPrompt" rows="3" 
                                      placeholder="Enter custom scoring criteria or leave blank to use template default"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="submitScoring()">
                        <i class="bi bi-award"></i> Score Profile
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/app.js"></script>
    <script>
        function scoreProfile(profileId) {
            // Load available templates
            fetch('/api/templates')
                .then(response => response.json())
                .then(result => {
                    const select = document.getElementById('templateSelect');
                    select.innerHTML = '<option value="">Select a template...</option>';
                    // Handle nested response structure
                    const templates = result.data?.templates || result.templates || result.data || [];
                    templates.forEach(template => {
                        select.innerHTML += `<option value="${template.id}">${template.name}</option>`;
                    });
                })
                .catch(error => console.error('Error loading templates:', error));
            
            // Show modal
            new bootstrap.Modal(document.getElementById('scoreModal')).show();
        }

        function submitScoring() {
            const profileId = '<%= profile.id %>';
            const templateId = document.getElementById('templateSelect').value;
            const customPrompt = document.getElementById('customPrompt').value;

            if (!templateId) {
                alert('Please select a scoring template');
                return;
            }

            const requestData = {
                template_id: templateId,
                profile_id: profileId
            };

            if (customPrompt.trim()) {
                requestData.custom_prompt = customPrompt.trim();
            }

            fetch(`/api/profiles/${profileId}/score`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(requestData)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    bootstrap.Modal.getInstance(document.getElementById('scoreModal')).hide();
                    showNotification('Profile scoring started successfully', 'success');
                    // Refresh the page to show the new scoring job
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                } else {
                    showNotification('Error starting profile scoring: ' + result.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Error starting profile scoring', 'error');
            });
        }

        function retryScoring(jobId) {
            if (confirm('Are you sure you want to retry this scoring job?')) {
                fetch(`/api/scoring-jobs/${jobId}/retry`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        showNotification('Scoring retry started successfully', 'success');
                        setTimeout(() => {
                            location.reload();
                        }, 2000);
                    } else {
                        showNotification('Failed to retry scoring: ' + result.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error retrying scoring', 'error');
                });
            }
        }
    </script>
</body>
</html>
