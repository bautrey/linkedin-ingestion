[pytest]
# Test discovery and execution
addopts = 
    --tb=short
    --strict-markers
    --strict-config
    -v
    --durations=10
    --color=yes
    --disable-warnings
    
testpaths = app/tests tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test markers for environment and category separation
markers =
    # Environment markers
    unit: Unit tests - fast, isolated, no external dependencies
    integration: Integration tests - may use database or mocked external services  
    production: Production tests - require live services and real data (use sparingly)
    
    # Behavior markers
    slow: Tests that take more than 5 seconds to run
    external: Tests that make real external API calls (LinkedIn, OpenAI, etc.)
    database: Tests that require database access
    destructive: Tests that modify or delete data
    flaky: Tests that are known to be unreliable
    timeout: Tests with custom timeout requirements
    
    # Service markers
    linkedin: Tests that interact with LinkedIn API
    openai: Tests that use OpenAI services
    cassidy: Tests that use Cassidy adapter
    scoring: Tests related to profile scoring
    templates: Tests for template management
    
# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*
    ignore:.*httpx.*:UserWarning
    ignore:.*pytest_asyncio.*:UserWarning
    
# Collection configuration
norecursedirs = .git .tox dist build *.egg venv .venv node_modules

# Minimum pytest version
minversion = 6.0
