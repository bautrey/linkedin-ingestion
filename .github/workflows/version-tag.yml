name: Version Tagging and Release

on:
  push:
    branches: [master, main]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.gitignore'

permissions:
  contents: write
  pull-requests: read

jobs:
  version-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js (for semantic versioning)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release \
            @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/github \
            conventional-changelog-conventionalcommits

      - name: Generate version information
        run: |
          chmod +x scripts/version.sh
          bash scripts/version.sh
          echo "Generated version info:"
          cat version.json

      - name: Extract version for tagging
        id: version
        run: |
          VERSION=$(cat version.json | grep '"version"' | cut -d'"' -f4)
          BASE_VERSION=$(cat version.json | grep '"base_version"' | cut -d'"' -f4)
          GIT_COMMIT=$(cat version.json | grep '"commit_short"' | cut -d'"' -f4)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
          echo "git_commit=$GIT_COMMIT" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: LinkedIn Ingestion v${{ steps.version.outputs.version }}
          body: |
            ## LinkedIn Ingestion Service Release
            
            **Version:** `${{ steps.version.outputs.version }}`  
            **Base Version:** `${{ steps.version.outputs.base_version }}`  
            **Git Commit:** `${{ steps.version.outputs.git_commit }}`  
            **Build Time:** `${{ env.BUILD_TIME }}`
            
            ### What's New
            - Automatic version tagging and release generation
            - Version information available at `/api/version` endpoint
            - Railway deployment integration with git metadata
            - Admin UI version display
            
            ### Deployment
            This release will be automatically deployed to Railway when pushed to the main branch.
            
            ### API Endpoints
            - **Backend Version:** `https://your-railway-app.up.railway.app/api/version`
            - **Admin UI Version:** `https://your-admin-ui.up.railway.app/version`
            
            ---
            *This release was automatically generated by GitHub Actions*
          draft: false
          prerelease: false

      - name: Update Railway deployment badge
        run: |
          # This could be enhanced to update a README badge with the latest version
          echo "Version ${{ steps.version.outputs.version }} tagged and released!"
          
  notify-railway:
    needs: version-and-release
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Trigger Railway deployment
        run: |
          echo "Railway will automatically deploy this version when it detects the git push"
          echo "Version info will be available via Railway environment variables"
